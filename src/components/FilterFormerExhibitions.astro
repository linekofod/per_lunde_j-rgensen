---
import "../styles/style.css";
import CardFormerExhibitions from "../components/CardFormerExhibitions.astro";

// Fetcher data
const data = await fetch(
  "https://eposbelbueemuzonqiuu.supabase.co/rest/v1/former_exhibitions?order=id.asc",
  {
    method: "GET",
    headers: {
      apikey:
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVwb3NiZWxidWVlbXV6b25xaXV1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTQ3MzY2NzEsImV4cCI6MjAzMDMxMjY3MX0.7RC3yfMry34vETtGOmQWAujgxwf9O7ONYsWoLMtoagM",
    },
  }
  // Resultatet konverteres til JSON-format med response.json().
).then((response) => response.json());
console.log(data);
---

<!-- FILTERBOKSEN -->
<article class="filter">
  <div class="box">
    <h4>Filter</h4>
    <div class="arrow down"></div>
  </div>
  <!-- FILTER OPTIONS -->
  <!-- Alle lokationer får klassen "filter_btn", og får hver deres navn med data-filter -->
  <!-- data-filter-attributten indeholder en værdi, der bruges til at identificere, hvilket filter der skal anvendes, når knappen klikkes. 
      Værdien matcher klassen på den sektion af data, der skal vises.
      For eksempel har den første knap data-filter="all", hvilket betyder, at når denne knap klikkes, skal alle udstillinger vises. -->
  <div class="filter_options">
    <a class="filter_btn" data-filter="all" href="#">All Exhibitions</a>
    <a class="filter_btn" data-filter="scandinavia" href="#">Scandinavia</a>
    <a class="filter_btn" data-filter="worldwide" href="#">Worldwide</a>
  </div>
</article>

<!-- LOKATION SEKTIONERNE -->
<!-- Hver lokation er i en sektion. 
    I sektionerne bliver der hentet deres tilhørende data-->

<!-- All Exhibitions sektionen -->
<section class="data all">
  <h3>All Exhibitions</h3>
  <div>
    <!-- Mapper over dataen, og indsætter det i komponentet CardFormerExhibitions -->
    {data.map((exhibition) => <CardFormerExhibitions data={exhibition} />)}
  </div>
</section>

<!-- Scandinavia sektion -->
<section class="data scandinavia">
  <h3>Scandinavia</h3>
  <div>
    {
      data
        .filter((exhibition) => exhibition.id === 5)
        /* filter: Denne metode bruges til at filtrere data arrayet, så kun de udstillinger fra "Scandinavia" inkluderes. */
        .map((exhibition) => (
          <CardFormerExhibitions position="text_right" data={exhibition} />
        ))
      /* map: Denne metode bruges til at iterere over de filtrerede udstillinger og returnere en CardFormerExhibitions komponent for hver. */
    }
  </div>
</section>

<!-- Worldwide sektion -->
<section class="data worldwide">
  <h3>Worldwide</h3>
  <div>
    <!-- Text left -->
    {
      data
        .filter((exhibition) => exhibition.id === 1)
        .map((exhibition) => (
          <CardFormerExhibitions position="text_left" data={exhibition} />
        ))
    }
    <!-- Text right -->
    {
      data
        .filter((exhibition) => exhibition.id === 2)
        .map((exhibition) => (
          <CardFormerExhibitions position="text_right" data={exhibition} />
        ))
    }
    <!-- Text left -->
    {
      data
        .filter((exhibition) => exhibition.id === 3)
        .map((exhibition) => (
          <CardFormerExhibitions position="text_left" data={exhibition} />
        ))
    }
    <!-- Text right -->
    {
      data
        .filter((exhibition) => exhibition.id === 4)
        .map((exhibition) => (
          <CardFormerExhibitions position="text_right" data={exhibition} />
        ))
    }
  </div>
</section>

<style>
  /* FILTERBOKSEN */
  .filter {
    width: 100%;
    height: 60px;
    border: 1px solid var(--sort100Color);
    margin: 24px 0 0 0;
    z-index: 0;
  }
  .box {
    width: 100%;
    height: 60px;
    display: flex;
    flex-direction: row;
    position: absolute;
    z-index: 0;
    cursor: pointer;
  }
  /* Overskriften "Filter" */
  h4 {
    position: absolute;
    top: 10px;
    left: 20px;
  }
  /* Pilen på filterboksen */
  .arrow {
    border: solid var(--sort100Color);
    border-width: 0 1.5px 1.5px 0;
    display: inline-block;
    padding: 7px;
    position: absolute;
    right: 20px;
  }
  /* Pilen har klassen "down" pr. default, så pilen vender nedad */
  .down {
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
    top: 18px;
  }
  /* Pilen får klassen "up", når der klikkes på filterboksen, så pilen vender opad */
  .up {
    transform: rotate(-135deg);
    -webkit-transform: rotate(-135deg);
    top: 26px;
  }
  /* Filter options er skjult pr. default */
  .filter_options {
    display: flex;
    visibility: hidden;
    background-color: var(--hvidColor);
    flex-direction: column;
    gap: 10px;
    padding: 10px 0 30px 20px;
    margin-top: 57px;
    position: absolute;
    left: 0;
    width: 100%;
    z-index: 999;
    border: 1px solid var(--sort100Color);
    border-top: 0;
  }
  /* Fjerner uppercase på links i filterboksen */
  a {
    text-transform: none;
  }
  a:hover {
    color: var(--rød100Color);
  }
  /* Filter options bliver vist, når der klikkes på filterboksen */
  .active {
    visibility: visible !important;
  }
  /* Den røde farve, som bliver tilføjet til lokation linksene, når der klikkes på dem */
  .red_color {
    color: var(--rød100Color);
  }

  /* LOKATION SEKTIONERNE */
  h3 {
    margin: 54px 0 -30px 0;
  }
  /* Dataen for lokation sektionerne er skjult pr. default */
  .data {
    display: none;
  }
  /* Dataen for lokation sektionerne bliver vist, når man klikker på en af lokationerne */
  .show_data {
    display: block !important;
  }

  /* Mobil version */
  @media screen and (max-width: 800px) {
    .filter {
      height: 50px;
      margin: 24px 0 34px 0;
    }
    .box {
      height: 50px;
    }
    .filter_options {
      margin-top: 47px;
      padding: 3px 0 20px 21px;
    }
    .filter_options a {
      font-size: 14px;
    }
    .down {
      top: 13px;
    }
    .up {
      top: 20px;
    }
    h3 {
      margin: 0px 0 10px 0;
    }
    .data_grid {
      display: block;
    }
  }
</style>

<script>
  // Definerer variabler for filterboksen, filter knapperne og alle lokation sektionerne
  const box = document.querySelector(".box");
  const filter = document.querySelector(".filter_options");
  const arrow = document.querySelector(".arrow");
  const filterBtns = document.querySelectorAll(".filter_btn");
  const sections = document.querySelectorAll(".data");

  // FUNKTION TO ÅBNING AF FILTER PÅ KLIK
  // Kalder funktion på klik af filter box (filterboksen åbner med klassen "active" og pilen vender opad med klassen "up")
  box.addEventListener("click", () => {
    filter.classList.toggle("active");
    arrow.classList.toggle("up");
  });

  // FUNKTION TIL HÅNDTERING AF LOKATION SEKTIONERNE PÅ KLIK
  // OVERORDNET FORKLARING:
  // - Koden tilføjer en click eventListener til hver af filtreringsknapperne (filterBtns).
  // - Når en knap klikkes, udfører koden følgende trin:
  // 1. Tjekker om knappen allerede er aktiv (har den røde farveklasse).
  // 2. Fjerner den røde farveklasse fra alle knapper og deaktiverer filtermenuen.
  // 3. Ved klik, hvis knappen ikke er aktiv, tilføjer den den røde farveklasse, filtrerer udstillingerne baseret på knappens filtertype og viser de relevante sektioner.
  // 4. Ved klik, hvis knappen allerede er aktiv, fjerner den den røde farveklasse fra knappen og skjuler de tilhørende sektioner.

  // DYBERE FORKLARING: Filterboksen:
  // 1. Itererer over alle filtreringsknapperne med forEach.
  // 2. Tilføjer en click eventListener på hver knap.
  // 3. Definerer en konstant, der siger, at hvis knappen er aktiv (isActive), så har knappen klassen "red_color" (denne konstant skal bruges nede i if-else statementet).
  // 4. Itererer over alle filtreringsknapperne igen og fjerner klassen "red_color" fra hver knap (dette sikrer, at ingen knap har den røde farveklasse før den klikkede knap tilføjer den igen).
  // 5. Fjerner klassen "active" fra filtermenuen, hvilket lukker menuen, når man har klikket på en titel.
  // 6. Fjerner klassen "up" fra pilen, hvilket vender pilen nedad, når man har klikket på en titel.

  /*1*/ filterBtns.forEach((btn) => {
    /*2*/ btn.addEventListener("click", () => {
      /*3*/ const isActive = btn.classList.contains("red_color");

      /*4*/ filterBtns.forEach((btn) => btn.classList.remove("red_color"));
      /*5*/ filter.classList.remove("active");
      /*6*/ arrow.classList.remove("up");

      // DYBERE FORKLARING: Titel sektionerne:
      // 1. Når man klikker på lokationerne: Kontrollerer om knappen allerede er aktiv (!isActive). Hvis den ikke er det, udføres handlingerne inden i if-blokken, ellers udføres handlingerne inden i else-blokken.
      // 2. Hvis knappen ikke allerede er aktiv, tilføjes klassen "red_color" til den klikkede knap.
      // 3. Henter værdien af data-filter attributten fra den klikkede knap. Denne værdi bestemmer, hvilken type kunstværk der skal vises (f.eks. all, scandinavia, worldwide).
      // 4. Itererer over alle sektionerne med klassen "data".
      // 5. Kontrollerer, om filtertypen er 'all'. Hvis den er det, vil alle sektioner blive vist. Ellers vil kun de sektioner, der matcher filtertypen, blive vist.
      // 6. Hvis filtertypen er 'all', tilføjes klassen "show_data" til alle sektionerne.
      // 7. Hvis filtertypen ikke er 'all', vil denne linje tilføje eller fjerne klassen "show_data" (toggle) baseret på om sektionen indeholder (contains) klassen for den specifikke filtertype.
      // 8. Når man klikker på lokationerne igen, for at få sektionen væk: Hvis knappen allerede er aktiv, skjul de relevante sektioner med remove af klassen "show_data".

      /*1 if-blokken*/ if (!isActive) {
        /*2*/ btn.classList.add("red_color");
        /*3*/ const filterType = btn.dataset.filter;
        /*4*/ sections.forEach((section) => {
          /*5*/ if (filterType === "all") {
            /*6*/ section.classList.add("show_data");
          } else {
            /*7*/ section.classList.toggle(
              "show_data",
              section.classList.contains(filterType)
            );
          }
        });
        /*8 else-blokken */
      } else {
        sections.forEach((section) => {
          section.classList.remove("show_data");
        });
      }
    });
  });
</script>
